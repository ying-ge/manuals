name: Scrape medRxiv AI Articles

on:
  schedule:
    # Run weekly on Monday at 2 AM UTC
    - cron: '0 17 * * 2' # 每周三 01:00 北京时间（UTC+8）
  workflow_dispatch:  # Allow manual trigger for immediate runs
    inputs:
      search_keyword:
        description: 'Search keyword (default: artificial intelligence)'
        required: false
        default: 'artificial intelligence'
      days_back:
        description: 'Days to look back (default: 30, use 365 for full 2025)'
        required: false
        default: '30'

permissions:
  contents: write

jobs:
  scrape:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Create necessary directories
        run: |
          mkdir -p data logs .cache
      
      - name: Run harvest script
        env:
          GLM_API_KEY: ${{ secrets.GLM_API_KEY }}
          GLM_BASE_URL: ${{ secrets.GLM_BASE_URL }}
          GLM_MODEL_NAME: ${{ secrets.GLM_MODEL_NAME }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          BIO_MODEL_API_KEY: ${{ secrets.BIO_MODEL_API_KEY }}
          BIO_MODEL_BASE_URL: ${{ secrets.BIO_MODEL_BASE_URL }}
          SEARCH_KEYWORD: ${{ github.event.inputs.search_keyword || 'artificial intelligence' }}
          DAYS_BACK: ${{ github.event.inputs.days_back || '30' }}
        run: |
          python src/harvest_medrxiv.py
      
      - name: Get timestamp for branch name
        id: timestamp
        run: echo "timestamp=$(date -u +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
      
      - name: Commit and push changes (direct, no PR)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          timestamp=$(cat .harvest-timestamp)
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add data .harvest-timestamp || true

          # 如果没有变更则退出
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git commit -m "data: Add medRxiv AI articles harvest ${timestamp}"

          # 计算当前分支名并与远端同步（避免 non-fast-forward）
          BRANCH=${GITHUB_REF#refs/heads/}
          echo "Target branch: $BRANCH"

          # 确保拿到远端最新提交并尝试 rebase（失败时继续以便后续排查）
          git fetch origin "$BRANCH"
          git pull --rebase origin "$BRANCH" || echo "Rebase may have conflicts; manual intervention may be required"

          # 推送回当前分支
          git push origin "HEAD:$BRANCH"
      
      - name: Upload logs as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: harvest-logs-${{ steps.timestamp.outputs.timestamp }}
          path: logs/
          retention-days: 30
